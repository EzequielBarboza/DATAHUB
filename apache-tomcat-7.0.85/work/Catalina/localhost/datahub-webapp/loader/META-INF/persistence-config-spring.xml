<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="persistenceService"
		  class="com.hybris.kernel.persistence.impl.DefaultPersistenceService" autowire="byName">

		<constructor-arg name="cacheEnabled" value="${kernel.cacheEnabled}" />
		<property name="persistenceConfiguration" ref="persistenceConfiguration" />
		<property name="typeSystem" ref="typeSystem" />
		<property name="eventDiscovery" ref="kernelEventDiscovery" />
		<property name="tenantContextService" ref="tenantContextService" />
	</bean>

	<alias name="typeEngineMappingPersistenceConfiguration" alias="persistenceConfiguration" />
	<bean id="typeEngineMappingPersistenceConfiguration"
		  class="com.hybris.kernel.persistence.config.TypeEngineMappingPersistenceConfiguration" lazy-init="true">
		<property name="typeSystem" ref="typeSystem" />
		<property name="enginesConfiguration" ref="enginesConfiguration" />
	</bean>

	<bean id="abstractCollectionService" class="com.hybris.kernel.persistence.impl.AbstractCollectionService" abstract="true">
		<property name="persistenceService" ref="persistenceService" />
		<property name="typeSystem" ref="typeSystem" />
		<property name="tenantContextService" ref="tenantContextService" />
	</bean>

	<bean id="relationService" class="com.hybris.kernel.persistence.impl.DefaultRelationService"
		  parent="abstractCollectionService" />

	<bean id="tenantContextService" class="com.hybris.commons.tenant.MultiTenantContextService">
		<constructor-arg name="context" ref="context" />
		<constructor-arg name="singleTenantMode" value="${kernel.singleTenantMode}" />
		<constructor-arg name="defaultTenantName" value="${kernel.defaultTenant}" />
	</bean>

	<bean id="context" class="com.hybris.commons.context.impl.DefaultContext" />

	<bean id="kernelEventDiscovery" class="com.hybris.kernel.persistence.event.KernelEventDiscovery" autowire="byType">
		<property name="taskExecutor" ref="kernelTaskExecutor" />
		<property name="tenantContextService" ref="tenantContextService" />
		<property name="eventProcessingTimeout" value="${kernel.eventProcessingTimeout}" />
	</bean>
	
	<bean class="com.hybris.kernel.persistence.event.KernelEventDiscoveryMBean">
		<property name="taskExecutor" ref="kernelTaskExecutor" />
	</bean>

	<bean id="kernelTaskExecutor" class="com.hybris.kernel.utils.TimeoutThreadPoolExecutor" destroy-method="shutdown">
		<constructor-arg name="maxPoolSize" value="${kernel.taskExecutor.maxPoolSize}" />
		<constructor-arg name="corePoolSize" value="${kernel.taskExecutor.corePoolSize}" />
	</bean>


	<alias name="defaultMetadataProvider" alias="metadataProvider" />
	<bean id="defaultMetadataProvider" class="com.hybris.kernel.persistence.metadata.impl.DefaultMetadataProvider">
		<property name="persistenceConfiguration" ref="persistenceConfiguration" />
		<property name="tenantContextService" ref="tenantContextService" />
	</bean>


	<import resource="classpath:/META-INF/persistence-serialization-spring.xml" />
</beans>
